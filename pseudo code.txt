{
  week_of_id: {
    monday: [],
    tuesday: [],
  }
}


<MenuBox week_of= this.props.week_of />

monday_menus = this.props.menus[:monday]
<MenuBoxItem menus=monday_menus, active=active />
<Menu menus=monday_menus />

//MenuBoxList Component
<ul class="tab tab-block">
  //MenuBoxItem
  <li class="tab-item active">
      <a href="#">Music</a>
      //MenuList
      <ul>
        //MenuItem
        <li></li>
      </ul>
  </li>
  <li class="tab-item">
      <a href="#" class="active">Playlists</a>
  </li>
  <li class="tab-item">
      <a href="#">Radio</a>
  </li>
  <li class="tab-item">
      <a href="#">Connect</a>
  </li>
</ul>


<ul class="tab tab-block">
  <li class="tab-item active">
      <a href="#">Music</a>
  </li>
  <li class="tab-item">
      <a href="#" class="active">Playlists</a>
  </li>
  <li class="tab-item">
      <a href="#">Radio</a>
  </li>
  <li class="tab-item">
      <a href="#">Connect</a>
  </li>
</ul>

// user logins successfully, dispacth fetch current meal plan, dispatch fetch all meals
// page redirects to home, home will display current meal plan
// if there are no current meal plans, display empty state i.e. You don't have any current plans. Click to create one.
// when user clicks create, show add new meal plan
// user fills out form hits submits, form will dispatch post new meal plan, server responds with success/error, then dispatches based on response.
// if successful then redirects back to current meal plan (in this case it is the home page)
// Current meal plan will be empty, show entire week in tabs, make active today's day, have a button somewhere that says add meals.
// user clicks on add meals a drawer will push from the right side of the page. User can browse meals.
// user checks one meal, selects which meal (meal 1, 2 etc) then clicks on add to menu. This will dispatch add to menu action. If meal one has been used then drop down will exclude it. (probably have to keep track in store)
